<!--
 $Id: build.xml 11921 2008-03-18 19:48:15Z jb127219 $
 
 Copyright © 2008, Sun Microsystems, Inc.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

    * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.

    * Neither the name of Sun Microsystems, Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


 
 ant buildfile for honeycomb client component.
--> 

<project name="admingui" default="install">

  <description>
    Honeycomb admingui component.
  </description>

  <!-- first, local, user specified .ant.properties files take precedence -->
  <property file="${user.home}/.ant.properties"/>

  <!-- second, use the build.properties for this package -->
  <property file="${basedir}/../admingui/build.properties"/>

  <!-- lastly, use the top-level builds properties file -->
  <property file="${basedir}/../build/build.properties"/>


  <!-- Important constants -->

  <path id="build.classpath">
    <pathelement location="${external.dist.libdir}/jetty-4.2.20.jar"/>
    <pathelement location="${external.dist.libdir}/swing-layout-1.0.jar"/>
    <pathelement location="${external.dist.libdir}/jh.jar"/>
    <pathelement location="${external.dist.libdir}/concurrent.jar"/>
    <pathelement location="${external.dist.libdir}/mozart-ui.jar"/>
    <pathelement location="${external.dist.libdir}/st5800-help.jar"/>
    <pathelement location="${external.basedir}/dist/lib/xmlrpc-2.0.1.jar"/>
    <pathelement location="${external.basedir}/dist/lib/commons-codec-1.3.jar"/>
    <!-- next 3 needed by the metadata config code, on the server side only -->
    <pathelement location="${server.dist.libdir}/${jarname.server}"/>
    <pathelement location="${adm.dist.libdir}/${jarname.adm}"/>
    <pathelement location="${mgmt.dist.libdir}/${jarname.mgmt}"/>

    <pathelement location="${common.build.classdir}"/>
    <pathelement location="${admingui.build.classes}"/>
  </path>
  
  <target name="prepare">
    <tstamp>
        <format property="ui.time" pattern="MMddyyyy"/>
    </tstamp>
    <mkdir dir="${admingui.build.basedir}"/>
    <mkdir dir="${admingui.build.classes}"/>
    <mkdir dir="${admingui.dist.basedir}"/>
    <mkdir dir="${admingui.dist.web}"/>
    <mkdir dir="${admingui.dist.bin}"/>
    <mkdir dir="${admingui.dist.libdir}"/>
    <mkdir dir="${admingui.dist.keystore}"/>
  </target>

  <!-- Convert Java Help jhm file into a java class file. -->
  <target name="help.convert" depends="prepare">
    <exec executable="${perl.bin}" failonerror="true">
      <arg line="${admingui.script.jhm2java} ${admingui.help}/${admingui.file.help.mapping.jhm} ${admingui.namespace.gui.present} ${admingui.file.help.mapping.name}"/>
    </exec>
    <move file="${admingui.file.help.mapping.javaclass}"
      tofile="${admingui.src}/${admingui.dir.namespace.gui.present}/${admingui.file.help.mapping.javaclass}"/>
  </target>

  <!-- re-use existing emd parser & encryption. need to recompile using 1.4 -->
  <target name="compile-parser" depends="prepare">
    <javac classpathref="build.classpath"
           srcdir ="${server.java.srcdir}"
           includes="com/sun/honeycomb/emd/common/*.java,
                     com/sun/honeycomb/emd/config/*.java,
                     com/sun/honeycomb/emd/parsers/*.java,
					 com/sun/honeycomb/common/InternalException.java"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="${javac.source}"
           target="1.4"
           optimize="${javac.optimize}"
           />
    <!-- classes generated by javacc -->
    <javac classpathref="build.classpath"
           srcdir ="${server.build.parser.srcdir}"
           includes="com/sun/honeycomb/emd/parsers/*.java"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="${javac.source}"
           target="1.4"
           optimize="${javac.optimize}"
           />
    <javac classpathref="build.classpath"
           srcdir="${common.java.srcdir}"
           includes="com/sun/honeycomb/common/ArchiveException.java,
		   			 com/sun/honeycomb/common/CliConstants.java"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="${javac.source}"
           target="1.4"
           optimize="${javac.optimize}"
           />
    <!-- encryption classes -->
    <javac classpathref="build.classpath"          
           srcdir="${adm.java.srcdir}"
           includes="com/sun/honeycomb/adm/cli/md5/*.java,
		   			 com/sun/honeycomb/adm/common/Validate.java"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
		   source="${javac.source}"
           target="1.4"
           optimize="${javac.optimize}"
           />
    <javac classpathref="build.classpath"          
           srcdir="${common.java.srcdir}"
           includes="com/sun/honeycomb/common/md5/*.java"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="${javac.source}"
           target="1.4"
           optimize="${javac.optimize}"
           />         
  </target>

  <target name="compile" depends="prepare, compile-parser">
    <!-- gui application uses 1.4 -->
    <javac classpathref="build.classpath"
           srcdir ="${admingui.src}"
           excludes="com/sun/honeycomb/admingui/server/*.java"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="${javac.source}"
           target="1.4.2"
           optimize="${javac.optimize}"
           />
    <!-- server-side gui code must use 1.5 -->
    <javac classpathref="build.classpath"
           srcdir ="${admingui.src}/com/sun/honeycomb/admingui/server"
           destdir="${admingui.build.classes}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="1.5"
           target="1.5"
           optimize="${javac.optimize}"
           />           
    <copy todir="${admingui.build.classes}">
      <fileset dir="${admingui.src}" includes="**/*.properties"/>
      <fileset dir="${admingui.src}" includes="**/*.gif"/>
      <fileset dir="${admingui.src}" includes="**/*.jpg"/>
    </copy>
  </target>

  <target name="jar" depends="prepare,compile">
    <jar jarfile="${admingui.jarfile}" excludes="**/*.form" compress="true">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="com.sun.honeycomb.admingui.present.Main" />
        <attribute name="Specification-Title" value="ST5800 Administration GUI"/>
        <attribute name="Specification-Version" value="${admingui.version}"/>
        <attribute name="Specification-Vendor" value="Sun Microsystems, Inc."/>
        <attribute name="Implementation-Title" value="com/sun/honeycomb/admingui/present"/>
        <attribute name="Implementation-Version" value="${ui.time}"/> 
        <attribute name="Implementation-Vendor" value="Sun Microsystems, Inc."/>
        <section name="com/sun/honeycomb/admingui/present/">
            <attribute name="Specification-Version" value="${admingui.version}"/>
            <attribute name="Implementation-Version" value="${ui.time}"/> 
        </section>
      </manifest>
      <fileset dir="${admingui.build.classes}"/>
      <fileset dir="${admingui.basedir}/web" includes="admgui.jnlp.template"/>
      <zipfileset src="${external.dist.libdir}/mozart-ui.jar"/>
      <!--
      <fileset dir="${server.build.classdir}" includes="com/sun/honeycomb/emd/common/*.class"/>
      <fileset dir="${server.build.classdir}" includes="com/sun/honeycomb/emd/config/*.class"/>
      <fileset dir="${server.build.classdir}" includes="com/sun/honeycomb/emd/parsers/*.class"/>
	  <fileset dir="${common.build.classdir}" includes="com/sun/honeycomb/common/ArchiveException.class"/>
      -->
    </jar>

  </target>

  <target name="install" depends="prepare,jar">
    <copy todir="${admingui.dist.web}">
      <fileset file="${admingui.web}/index.html"/>
      <fileset file="${admingui.web}/logo.jpg"/>
      <fileset file="${admingui.jarfile}"/>
    </copy>
    <taskdef name="stripSignatures"
             classname="com.sun.honeycomb.admingui.server.StripSignatures"
             classpath="${admingui.jarfile}" />
      <stripSignatures outputDirectory="../build/admingui/dist/web">
        <fileset file="${external.basedir}/dist/lib/swing-layout-1.0.jar"/>
        <fileset file="${external.basedir}/dist/lib/jh.jar" />
        <fileset file="${external.basedir}/dist/lib/concurrent.jar" />
        <fileset file="${external.basedir}/dist/lib/xmlrpc-2.0.1.jar"/>
        <fileset file="${external.basedir}/dist/lib/commons-codec-1.3.jar"/>
        <fileset file="${external.basedir}/dist/lib/st5800-help.jar"/>
      </stripSignatures>

    <!-- no longer generating keys on the fly
         since this lead to some probs in the new build process
    <delete file="${admingui.keystorefile}" quiet="true" />
    <genkey alias="ST5800Admin" 
            storepass="changeit"
            keystore="${admingui.keystorefile}"
            dname="CN=Sun StorageTek 5800, O=Sun Microsystems\, Inc., C=US"
            validity="3650" />
    -->
    <signjar alias="ST5800Admin"
             storepass="changeit"
             keystore="${admingui.web}/AdminGuiKeystore">
        <fileset dir="${admingui.dist.web}" includes="*.jar" />
    </signjar>
    <copy todir="${admingui.dist.bin}">
      <fileset dir="${admingui.basedir}/bin" includes="*"/>
    </copy>
    <chmod file="${admingui.dist.bin}/startHttpServer.sh" perm="a+x"/>
    <chmod file="${admingui.dist.bin}/startGui.sh" perm="a+x"/>

  </target>

  <target name="gennewkey">
    <delete file="${admingui.web}/AdminGuiKeystore"/>
    <genkey alias="ST5800Admin" 
            storepass="changeit"
            keystore="${admingui.web}/AdminGuiKeystore"
            dname="CN=Sun StorageTek 5800, O=Sun Microsystems\, Inc., C=US"
            validity="3650" />  
  </target>
  
  <target name="pkg" depends="prepare,install"
    description="Build the solaris package">

    <mkdir dir="${admingui.pkgdir}"/>

	<exec executable="${pkgmk.bin}" failonerror="yes">
	  <!-- arg value="" does not work here for some reason -->
	  <arg line="-o -d ${admingui.pkgdir} -f ${admingui.pkgsrc}/prototype -r ${admingui.dist.basedir}"/>
	</exec>
	
	<exec executable="${pkgtrans.bin}" failonerror="yes">
	  <arg line="-s ${admingui.pkgdir} SUNWhcadmingui.pkg SUNWhcadmingui"/>
	</exec>
  </target>

  <target name="run" depends="pkg">
    <exec executable="java">
      <arg line="-cp ${admingui.javahelp}:${admingui.help.jarfile}:${admingui.jarfile}:${admingui.dist.web}/xmlrpc-2.0.1.jar:${admingui.dist.web}/commons-codec-1.3.jar
           -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
           com.sun.honeycomb.admingui.client.AdminApiXML"/>
    </exec>
  </target>
  
  <target name="runDebug" depends="jar">
	<java classname="com.sun.nws.mozart.ui.MainFrame" fork="true">
        <classpath>
            <pathelement location="${admingui.jarfile}" />
            <path refid="build.classpath" />
        </classpath>
        <jvmarg line="-Dadmingui.objectFactory=com.sun.honeycomb.admingui.present.ObjectFactory" />
        <jvmarg line="-Dadmingui.host=10.8.54.46:8090" />
		<jvmarg line="-Dadmingui.refresh=300" />
        <jvmarg line="-Dacceptallcerts=true" />
    </java>
  </target>
  
  <target name="runGui" depends="jar">
    <java classname="com.sun.honeycomb.admingui.present.Main" fork="true">
        <classpath>
            <pathelement location="${admingui.jarfile}" />
            <path refid="build.classpath" />
        </classpath>
        <jvmarg line="-Dadmingui.objectFactory=com.sun.honeycomb.admingui.present.ObjectFactory" />
        <jvmarg line="-Dadmingui.host=10.8.54.46:8090" />
        <jvmarg line="-Dacceptallcerts=true" />
    </java>
  </target>
    
  <!-- ************************************************************* -->
  <target name="build_pkg" depends="pkg"
          description="compile sources and create solaris package" />

  <!-- CLEAN ************************************************************** -->
  <target name="clean" description="cleans workspace of all generated files">
    <delete dir="${admingui.build.basedir}"/>
  </target>
  
  <!--
      Launch the Axis TCP Monitor to intercept HTTP/XML traffic
  -->
  <target name="monitor" description="Launch the Axis TCP Monitor.">
     <java classname="org.apache.axis.utils.tcpmon"
         classpath="${external.basedir}/lib/axis.jar" fork="true">
       <jvmarg line="-Dtcpmon.laf=javax.swing.plaf.metal.MetalLookAndFeel" />
     </java>
  </target>

  <target name="javadoc" description="generates javadocs for AdminApi and related classes">
     <javadoc destdir="${admingui.build.basedir}/javadoc"
              windowtitle="ST5800 AdminGUI internal transport level API"
              doctitle="ST5800 AdminGUI internal transport level API">
        <fileset file="${admingui.src}/com/sun/honeycomb/admingui/client/*.java"/>
        <fileset file="${server.java.srcdir}/com/sun/honeycomb/emd/config/*.java"/>
     </javadoc>
     <copy todir="${user.home}/public_html/javadoc">
         <fileset dir="${admingui.build.basedir}/javadoc"/>
     </copy>
  </target>
</project>

