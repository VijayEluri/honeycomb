#!/bin/bash

# Wrapper around svn diff to generate a webpage of diffs, with links
# to individual file diffs. The file diffs show the diffs like tkdiff
# does, in side-by-side panes with colours highlighting differences.
#
# The heavy lifting is all done by gawk.
#
# Options:
#     -o is not an optional option -- the directory to put everything in
#     -w means DON'T ignore whitespace.
#
# If you edit the generated index.html, be sure you don't modify the
# marker lines <!--  DO NOT REMOVE THIS LINE ... --> or anything
# between them. This way you can re-run the script and your changes
# will be preserved. If the script thinks there might have been some
# monkey business it leaves the index.html file alone and writes index2.html.
#
# Similarly, if the CSS file diff.css exists, it will not be overwritten.
#
# Shamim Mohamed, 2007
#
# $Id: webdiff.sh 11297 2007-07-31 23:31:49Z sm152240 $

function usage {
    cat <<-EOF
	Usage: $0 [-w] -o dir-name [file | dir] ...
	   -o : [required] the directory to create and populate
	   -w : do NOT ignore whitespace changes
EOF
    exit 1
}

########################################################################
# Parameters, options,  etc.

while getopts "o:w" opt; do
    case "$opt" in
    o) DESTDIR="$OPTARG" ;;

    w) WFLAG="y" ;;

    *) usage ;;
    esac
done
shift $(($OPTIND - 1))

if [ -z "$DESTDIR" ]; then
    echo "No destination dir (-o) specified." >&2
    usage
fi

if [ "$#" = 0 ]; then
    echo "Diffing current directory" >&2
    set .
fi

TITLE="Diffs for $USER"
HEADING="Diffs for <tt>$USER</tt>"
INDEX="$DESTDIR/index.html"
CSSFILE="$DESTDIR/diff.css"

TMPFILE="/var/tmp/webdiff$$"
INDEX2="${INDEX%.html}2.html"
BACKUP="${INDEX}.bak"

if [ -z "$WFLAG" ]; then
    DIFFOPTS="-b"
else
    DIFFOPTS=
fi

########################################################################
# HTML/CSS generating functions

# Write the CSS file.
function write_css {
    if [ -f "$CSSFILE" ]; then
        return;
    fi

    cat >"$CSSFILE" <<-EOF
	/*  Want to change colours, fonts, etc.? Do it here */

	DIV.diff { font-size: 80% }
	TABLE.diff { padding: 0; border-spacing: 0 }
	TD.plain { color: black; background: white }
	TD.added { color: black; background: rgb(225,255,225) }
	TD.deleted { color: black; background: rgb(255,225,225) }
	TD.changed { color: black; background: rgb(245,240,153) }
	TD.empty { background: rgb(225,225,225) }
	B.red { color: red }

	DIV.footer { font-size: 50% }

	/* These are for files that were added or deleted */
	PRE.added { background: rgb(225,255,225) }
	PRE.deleted { background: rgb(255,225,225) }

	/* Generated by webdiff $(date) */
EOF
}

function html_header {
    cat  <<-'EOF'
	<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE html
	    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
	<HTML xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	  <HEAD>
	    <LINK rel="stylesheet" type="text/css" href="diff.css" />
	EOF
    echo "    <TITLE>$1</TITLE></HEAD>"
    echo "  <BODY><H1>$2</H1>"
}

function makeHTMLdiff {
    srcfile="$1"
    output="$2"
    
    svn diff --diff-cmd gdiff \
          -x "-N $DIFFOPTS --side-by-side --width=200" "$srcfile" | \
      sed 1,2d | expand | gawk '
    function quote(s,    len) {
        gsub(" +$", "", s)
        len = length(s)
        gsub("&", "\\&amp;", s)
        gsub("<", "\\&lt;", s)
        gsub(" ", "\\&nbsp;", s)

        # 96 == 200/2 - 4
        if (len >= 96)
            # Line possibly truncated
            s = s "<B class=\"red\">&mdash;&gt;&gt;&gt;</B>"

        return s
    }

    BEGIN {
        print("<P><DIV class=\"diff\"><TABLE class=\"diff\">")
    }

    {
        left = quote(substr($0, 1, 99))
        right = quote(substr($0, 104, 100))
        tag = substr($0, 100, 1)
        if (tag == " ") tag = ""

        leftColour = rightColour = "plain"
        if (tag == "|") {
            leftColour = rightColour = "changed"
            lines_both++
        }
        else if (tag == "<") {
            leftColour = "deleted"
            rightColour = "empty"
            lines_left++
        }
        else if (tag == ">") {
            leftColour = "empty"
            rightColour = "added"
            lines_right++
        }

        printf("<TR><TD>")

        if (tag != "" && prev_tag == "") {
            if (anchor > 0)
                printf("<A href=\"#diff%d\"><B>Prev:&nbsp;%d</B></A>\n", anchor-1, anchor-1)

            printf("\n<!--  Diff #%d -->\n", anchor)
            printf("<A name=\"diff%d\"/>\n", anchor++)
        }

        printf("</TD>\n <TD class=\"%s\">%s</TD>\n <TD class=\"%s\">%s</TD>\n",
               leftColour, left, rightColour, right)

        if (tag == "" && prev_tag != "")
            printf(" <TD><B><A href=\"#diff%d\">Next:&nbsp;%d</A></B></TD>\n", anchor, anchor)

        print("</TR>")
        prev_tag = tag
    }

    END {
        print("</TABLE></DIV></P>")

        print("<P>All diffs in this file:")
        for (i = 0; i < anchor; i++)
            printf("<A href=\"#diff%d\">%d</A> ", i, i);

        print("</P></BODY></HTML>")
        printf("<!-- !%d&nbsp;+%d&nbsp;-%d -->\n", lines_both, lines_right, lines_left)

    }' >> "$output"
}

function makeHTMLfile {
    srcfile="$1"
    output="$2"
    class="$3"

    echo "<DIV class=\"diff\"><PRE class=\"$class\">" >> "$output"
    sed -e 's/&/\&amp\;/g;s/</\&lt\;/g' "$srcfile" | expand >> "$output"
    echo "</PRE></DIV></BODY></HTML>" >> "$output"
}

# stdout should be redirected to index.html
function process_arg {
  arg="$1"

  echo "      <TR><TD colspan=\"3\"><H2>${arg}</H2></TD></TR>" 
  IFS="
"
  for LINE in `svn st -q "$arg"`; do
    STATUS=`echo "$LINE" | cut -c 1`
    FPATH=`echo "$LINE" | cut -c 8-`
    
    NFILES=$((NFILES+1))
    DIR=`dirname "$FPATH"`
    NAME=`basename "$FPATH"`
    HASH=`echo "$FPATH" >$TMPFILE; sum $TMPFILE | cut -d ' ' -f 1`
    OUTFILENAME="${HASH}${NAME}.html"
    ORIGFILENAME="${HASH}${NAME}.txt"
    OUTFILE="${DESTDIR}/${OUTFILENAME}"
    ORIGFILE="${DESTDIR}/${ORIGFILENAME}"

    # Generate the HTML for this file

    case "$STATUS" in

    M|C)
        cp "$FPATH" "$ORIGFILE"

        html_header "Diffs for '$NAME'" >"$OUTFILE"
        echo "<B>${FPATH}</B>" >>"$OUTFILE"
        echo "(Modified file: <A href=\"${ORIGFILENAME}\">${NAME}</A>)" >>"$OUTFILE"

        makeHTMLdiff "$FPATH" "$OUTFILE"

        # Get summary info for the diff
        INFO=`tail -1 "$OUTFILE"`
        INFO=${INFO#<!-- }
        INFO=${INFO% -->}

        if [ ".$STATUS" = ".C" ]; then
            LABEL="<b class=\"red\">C</b>"
        else
            LABEL="&nbsp;&nbsp;&nbsp;"
        fi
        ;;

    D)
        html_header "Deleted file '$NAME'" >"$OUTFILE"
        echo "<H3>($FPATH)</H3>" >>"$OUTFILE"

        OLDFILE="${DIR}/.svn/text-base/${NAME}.svn-base"
        makeHTMLfile "$OLDFILE" "$OUTFILE" deleted
        INFO="!0 +0 -`wc -l $OLDFILE | awk '{print $1}'`"
        LABEL="d"
        ;;

    A)
        html_header "New file '$NAME'" >"$OUTFILE"
        echo "<H3>($FPATH)</H3>" >>"$OUTFILE"

        makeHTMLfile "$FPATH" "$OUTFILE" added
        INFO="!0 +`wc -l $FPATH | awk '{print $1}'` -0"
        LABEL="a"
        ;;
        
    *)
        INFO=
        LABEL=
        ;;
    esac

    # Add an entry to index.html
    echo "      <TR>"
    echo "         <TD>$LABEL</TD>" 
    echo "         <TD>$INFO</TD>" 
    echo "         <TD><A href=\"${OUTFILENAME}#diff0\">${FPATH}</A></TD>" 
    echo "      </TR>"
  done
  IFS="$OIFS"
}

########################################################################
# Main

TSTART="<!-- DO NOT REMOVE THIS LINE : STARTTABLE -->"
TEND="<!-- DO NOT REMOVE THIS LINE : ENDTABLE -->"

mkdir -p "$DESTDIR" || echo "Couldn't make directory $DESTDIR" >&2

write_css

if [ -f "$INDEX" ]; then
    # See if it has the marker strings
    if fgrep -s "$TSTART" "$INDEX" && fgrep -s "$TEND" "$INDEX" ; then
        HAVE_INDEX="Y"
    else
        echo "Ignoring $INDEX (not created by this version of webdiff)"
        unset HAVE_INDEX
    fi
fi


if [ -n "$HAVE_INDEX" ]; then
    sed -n "1,/$TSTART\$/p" "$INDEX" >"$INDEX2"
else
    html_header "$TITLE" "$HEADING" >"$INDEX2"
    echo -e "\n    <P>Working directory: <TT>$PWD</TT></P>" >>"$INDEX2"
    echo -e "\n${TSTART}" >>"$INDEX2"
fi

echo -e "    <P><BLOCKQUOTE><TABLE>" >>"$INDEX2"

NFILES=0
OIFS="$IFS"
for arg in "$@"; do
    process_arg "$arg" >>"$INDEX2"
done

echo "    </TABLE></BLOCKQUOTE></P>" >>"$INDEX2"

if [ -n "$HAVE_INDEX" ]; then
    sed -n "/$TEND\$/,\$p" "$INDEX" >>"$INDEX2"
else
    echo "$TEND" >>"$INDEX2"

    echo -en "\n    <P><DIV class=\"footer\">\n"  >>"$INDEX2"
    date >>"$INDEX2"
    echo -e "    </DIV></P>\n  </BODY>\n</HTML>" >>"$INDEX2"
fi

if [ -n "$HAVE_INDEX" -o ! -f "$INDEX" ]; then
    if [ -f "$INDEX" ]; then
        mv "$INDEX" "$BACKUP"
    fi
    mv "$INDEX2" "$INDEX"
else
    echo "HTML left in $INDEX2"
fi

rm -f "$TMPFILE"
exit 0

