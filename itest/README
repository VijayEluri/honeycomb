#
# $Id: README 11060 2007-06-20 00:26:40Z lf70604 $
#
# Copyright © 2008, Sun Microsystems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   # Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
#   # Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
#   # Neither the name of Sun Microsystems, Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



#

What is this module:
-------------------

The module 'itest'-- is used to run 'intrusive tests' in our cluster.
One should first shutdown the running cluster, then add the package
SUNWhcitest, and then add some properties and finally restart the cluster.

Existing tests:

I. Config/update stress tests:
----------------------------


The purpose of those tests is to stress the CMM config/update. They directly
use the CMM APIs and therefore don't test the full config/update stack.
They tests the following API:
. updateConfig
. storeConfig


- Installation:
  - - - - - - 

1. Follow the generic instructions above.  The first step is to shutdown 
your cluster.

2. Add the package SUNWhcitest on all nodes.

    * from hc-dev: scp -r /export/release/repository/releases/1.1/1.1-XX/AUTOBUILT/pkgdir/SUNWhcitest root@dev3XX-cheat:
    * from service processor utils dir: ./copy_to_servers.sh ../SUNWhcitest
    * from service processor utils dir: ./do-servers.sh 'yes | pkgadd -d . SUNWhcitest'

Until the official build includes the itest pkg, you can do 'ant pkg' 
in the itest directory and copy the package from build/pkgdir.

3. Patch the 'honeycomb' startup script (under /opt/honeycomb/etc/init.d)
to add the honeycomb-itest.jar in the classpath.

    * scp hcb101:/opt/honeycomb/etc/init.d/honeycomb .
    * vi honeycomb
          <add honeycomb-itest.jar to classpath>
             ... -classpath /opt/honeycomb/lib/honeycomb-itest.jar:...
    * ./copy_to_servers.sh honeycomb /opt/honeycomb/etc/init.d

4. Start the cluster

   * ./do-servers.sh /opt/honeycomb/etc/init.d/honeycomb start


- Running the test:
  - - - - - - - - -

The config/update stress tests are driven through a hidden CLI.
(do a 'help' on the CLI for tcfgupd)

You can start as many as 5 'executors', and each of which will run
config/update operations. You can specify failures, the interval
between each config/update, and also which CMM API you want to target.

hc $ tcfgupd -c 0 -n -l 1000 -k  -f  -p 10 
(1) createInterface = false
(2) createInterface = true
(1) nodeFailure = false
(2) nodeFailure = true
Started successfully executor, id = 1

hc $ tcfgupd -c 0 -n -l 1000  -f  -p 10     
(1) createInterface = false
(2) createInterface = false
(1) nodeFailure = false
(2) nodeFailure = true
Started successfully executor, id = 2


You can stop the executor using the CLI and a small status will show
up to give you the 'min', 'max', and 'average' value of these operations.

hc $ tcfgupd -c 0 -r -i 1 


- Status:
  - - - 

If any error occurs the executor will be stopped.
Note that you can grep your logs for the string CfgUpd.
Both the tests and the CMM calls-- for config/update will show up.

   * tail -f /var/adm/messages | grep CfgUpd


- Notes:
  - - -

A long running test might hit this issue:

6527988 Config/update fails after a few hours of stress tests

