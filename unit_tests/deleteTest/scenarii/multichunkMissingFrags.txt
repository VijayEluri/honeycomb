/*
 * Copyright © 2008, Sun Microsystems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *    * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 *    * Neither the name of Sun Microsystems, Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */



import com.sun.honeycomb.delete.Constants;
import com.sun.honeycomb.oa.OAClient;



ECHO("Tests multi-chunk with missing frags");

OAClient oac = OAClient.getInstance();


chunksize = Constants.MAX_CHUNK_SIZE = oac.blockSize;
oac.setMaxChunkSize(Constants.MAX_CHUNK_SIZE);
storesize = chunksize * 7;

System.out.println(oac.blockSize + " " + chunksize + " " + storesize);

ECHO("store size " + storesize);
STORE(1, storesize);
DEREF(1,0);

ECHO("--> Remove frag chunk from each chunk");
FRAGREMOVE(0, 0, 0);
FRAGREMOVE(0, 1, 1);
FRAGREMOVE(0, 2, 2);
FRAGREMOVE(0, 3, 3);
FRAGREMOVE(0, 4, 4);
FRAGREMOVE(0, 5, 5);
FRAGREMOVE(0, 6, 6);

ECHO("--> Retrieve the object");
RETRIEVE(0, true);

ECHO("store size " + storesize);
STORE(3, storesize);
DEREF(3,2);

ECHO("--> Remove frag two chunks from each chunk");
FRAGREMOVE(2, 0, 0);
FRAGREMOVE(2, 0, 1);
FRAGREMOVE(2, 1, 1);
FRAGREMOVE(2, 1, 2);
FRAGREMOVE(2, 2, 2);
FRAGREMOVE(2, 2, 3);
FRAGREMOVE(2, 3, 3);
FRAGREMOVE(2, 3, 4);
FRAGREMOVE(2, 4, 4);
FRAGREMOVE(2, 4, 5);
FRAGREMOVE(2, 5, 5);
FRAGREMOVE(2, 5, 6);
FRAGREMOVE(2, 6, 6);
FRAGREMOVE(2, 6, 0);

ECHO("--> Retrieve the object");
RETRIEVE(2, true);

