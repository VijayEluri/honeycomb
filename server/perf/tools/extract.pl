#! /usr/bin/perl

#
# $Id: extract.pl 10855 2007-05-19 02:54:08Z bberndt $
#
# Copyright © 2008, Sun Microsystems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   # Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
#   # Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
#   # Neither the name of Sun Microsystems, Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



#

$INPUT_FILE=$ARGV[0];
if (!$INPUT_FILE) {
  $INPUT_FILE="StoreHandlerPerf.txt";
  print STDERR "Using the default input file <$INPUT_FILE>\n";
}

$STEP=2000;
$ALPHA=0.3;

open(INPUT, $INPUT_FILE) || die("Couldn't open $INPUT_FILE");

print <<END;
#
# Generated by extract.pl. DO NOT EDIT !!!!!
#
# - time (ms)
# - average thoughput per op
# - real throughput
#
END

$first=1;
$previous = 0;
$previous_real = 0;
$previous_nbops = 0;
$processed = 0;
$size = 0;
$time = 0;
$min_time = 0;
$max_time = 0;

LOOP: while ($line = <INPUT>) {
    if (substr($line,0,1) eq "#") {
      next LOOP;
    }
    chomp($line);
    @fields = split(/ /,$line);

    if ($processed == 0) {
      $min_time = $fields[0];
    }

    $size += $fields[2]/1000;
    $time += $fields[3];
    $processed++;


    if ($processed == $STEP) {
      if ($first == 1) {
        $previous = $size/$time;
        $previous_real = $size/($fields[0]-$min_time);
        $previous_nbops = $STEP*1000/($fields[0]-$min_time);
        $first=0;
      } else {
        $throughput = $ALPHA*($size/$time) + (1-$ALPHA)*$previous;
        $real = $ALPHA*($size/($fields[0]-$min_time)) + (1-$ALPHA)*$previous_real;
        $nb_ops = $ALPHA*($STEP*1000/($fields[0]-$min_time)) + (1-$ALPHA)*$previous_nbops;
        $previous = $throughput;
        $previous_real = $real;
        $previous_nbops = $nb_ops;

        print $fields[0]." $throughput $real $nb_ops\n";
      }

      $size=0;
      $time=0;
      $processed = 0;
    }
}

close(INPUT);
