#!/usr/bin/perl
#
# $Id: detach_mirrors.pl.in 10855 2007-05-19 02:54:08Z bberndt $
#
# Copyright © 2008, Sun Microsystems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   # Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
#   # Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
#   # Neither the name of Sun Microsystems, Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



#

#
#
# Detach any zpool mirrors associated with the device
#
# arguments: /dev/dsk/c?t?d?s?
#
# Returns 0 if mirrors were taken offline successfully (or were already
# offline), non-zero otherwise.
#

use warnings;

# make sure we have /usr/sbin in our path for zpool
$path = $ENV{'PATH'};
$ENV{'PATH'} = "/usr/sbin:$path";

#
# log errors
#
sub log_error {
  my $logger_string = shift @_;
  `logger -t offline_mirrors -p local0.info $logger_string`
}

#
# Take any zpool mirrors corresponding to the device offline.
# There may not be any such mirrors, in which case this subroutine
# should return success.
#
sub offline_mirrors {
  my $dev_name = shift @_;

  my $pid = open(ZPOOL, "zpool status tank |grep $dev_name|");

  my ($zp_dev_name, $zp_state, $zp_rd, $zp_wr, $wp_chksum);

  # detach any mirrors
  while (<ZPOOL>) {
    ($zp_dev_name, $zp_state, $zp_rd, $zp_wr, $wp_chksum) = split;
    `zpool detach tank $zp_dev_name`;
    if ($? != 0) {
	&log_error("zpool detach tank $zp_dev_name failed errno $?\n");
	# in the face of inability to remove the mirror, we continue
	# on regardless.  zfs must be able to handle the failure of such
	# a disk in any case.
    }
  }
  close ZPOOL;

  # paranoia: double-check to see that they are really offline
  # XXX we could probably refactor this to us a common loop over
  # zpool output

  $pid = open(ZPOOL, "zpool status tank |grep $dev_name|");

  # check that all mirrors are OFFLINE or not found
  while (<ZPOOL>) {
    ($zp_dev_name, $zp_state, $zp_rd, $zp_wr, $wp_chksum) = split;
    if ($zp_state ne "OFFLINE") {
      &log_error("zpool device $dev_name should be OFFLINE, is $zp_state\n");
      return 1;
    }
  }
  close ZPOOL;
  
  return 0;
}

###### main #######

$_ = $ARGV[0];

# extract devname from argument;
# use m|...| so that we do not need to use a lot of "\/" 
my ($dev_name) = "";
($dev_name) = m|.*(c\dt\dd\d).*|;

die "usage: $0: devicename" unless ($dev_name ne "");

my $retval = &offline_mirrors($dev_name);
exit($retval);
