#! /bin/sh
#
# $Id: ksym_addr.sh 10855 2007-05-19 02:54:08Z bberndt $
#
# Copyright © 2008, Sun Microsystems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   # Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
#   # Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
#   # Neither the name of Sun Microsystems, Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



#

#
# This script provides a way to link a kernel module
# against unexported symbols, by grabbing the absolute
# address of those symbols from the kernel's symbol map
# file. The echoed output must then be passed to
# the linker when building the final module object file.
#
# Of course, this requires the symbol map file in question
# to be in sync with the kernel being run...
#

SYSTEM_MAP=$1
SYMBOL_LIST=$2
SYMBOL_VERSION=$3

# for each missing, non-exported symbol.
egrep "^EXPORT_SYMBOL" ${SYMBOL_LIST} | cut -d'(' -f2 | cut -d')' -f1 | while read symb
do
    # check that the symbol is really non-exported.
    if [ -n "`egrep __ksymtab_${symb}\$ ${SYSTEM_MAP}`" ]
    then
        echo "$0: ignoring exported symbol ${symb}." >&2
	continue
    fi

    # grab the address of the symbol from the System.map file.
    egrep " ${symb}\$" ${SYSTEM_MAP} | while read addr x x
    do
        /bin/echo -n "--defsym ${symb}=0x${addr} "

        # grab the versioned name of the symbol from the file generated by genksyms.
	egrep "^#define __ver_${symb}\>" ${SYMBOL_VERSION} | while read x x vers
	do
	    /bin/echo -n "--defsym ${symb}_R${vers}=0x${addr} "

	done
    done
done
