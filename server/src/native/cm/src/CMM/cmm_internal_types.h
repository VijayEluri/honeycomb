/*
 * Copyright © 2008, Sun Microsystems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *    * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 *    * Neither the name of Sun Microsystems, Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */



/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CMM_INTERNAL_TYPES_H_RPCGEN
#define	_CMM_INTERNAL_TYPES_H_RPCGEN

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif


enum cmm_error_t {
	CMM_OK = 0,
	CMM_EBADF = -100,
	CMM_EBUSY = -100 + 1,
	CMM_ECANCELED = -100 + 2,
	CMM_EEXIST = -100 + 3,
	CMM_EINVAL = -100 + 4,
	CMM_ENOENT = -100 + 5,
	CMM_ENOMSG = -100 + 6,
	CMM_ENOTSUP = -100 + 7,
	CMM_EPERM = -100 + 8,
	CMM_ERANGE = -100 + 9,
	CMM_ESRCH = -100 + 10,
	CMM_ENOCLUSTER = -100 + 11,
	CMM_ECONN = -100 + 12,
	CMM_ETIMEDOUT = -100 + 13,
	CMM_EAGAIN = -100 + 14,

    /* Internal errors */
    CMM_ENOMEM = -100 + 15,
    CMM_EOTHER = -100 +16
};
typedef enum cmm_error_t cmm_error_t;
#define	STAT_API_CALLS "calls_to_API"
#define	STAT_API_CALLS_TITLE "Nr API calls"
#define	STAT_API_CLIENTS "clients_of_API"
#define	STAT_API_CLIENTS_TITLE "Nr API clients"
#define	STAT_NOTIF_CLIENTS "notified_clients"
#define	STAT_NOTIF_CLIENTS_TITLE "Nr notif clients"
#define	STAT_SWITCHOVER_COUNT "switchovers"
#define	STAT_SWITCHOVER_COUNT_TITLE "Nr switchovers"
#define	STAT_ELECTION_COUNT "relative_elections"
#define	STAT_ELECTION_COUNT_TITLE "Nr elect. since node start"
#define	STAT_ABSOLUTE_ELECTION_NUMBER "absolute_election"
#define	STAT_ABSOLUTE_ELECTION_NUMBER_TITLE "Nr elect. since platform start"
#define	STAT_ELECTION_DELAY "election_delay"
#define	STAT_ELECTION_DELAY_TITLE "gap between el. nodes (sec)"
#define	STAT_CLUSTER_SIZE "cluster_size"
#define	STAT_CLUSTER_SIZE_TITLE "nr nodes in cluster"
#define	STAT_UP_TIME "up_time"
#define	STAT_UP_TIME_TITLE "up_time"
#define	STAT_FRAME_TIME "frame_time"
#define	STAT_FRAME_TIME_TITLE "frame_time"
#define	CMM_MAX_SWLOADID_SIZE 32
#define	CMM_MAX_NAME_SIZE 256
#define	CMM_MAX_ADDR_SIZE 64
#define	CMM_NO_NODE 0
#define	CMM_NO_DOMAIN 0

typedef uint32_t cmm_nodeid_t;

typedef uint32_t cmm_incarn_t;

typedef char cmm_swload_t[CMM_MAX_SWLOADID_SIZE];

typedef char cmm_membername_t[CMM_MAX_NAME_SIZE];

typedef char cmm_memberaddr_t[CMM_MAX_ADDR_SIZE];

typedef uint32_t cmm_domainid_t;

#ifdef __cplusplus
}
#endif

#endif /* !_CMM_INTERNAL_TYPES_H_RPCGEN */
