.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NE_GET_RESPONSE_H" 3 "20 January 2006" "neon 0.25.5" "neon API reference"
.SH NAME
ne_get_response_header, ne_response_header_iterate \- functions to access response headers
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ne_request\&.h>
.sp
.HP 37
const\ char\ *\fBne_get_response_header\fR\ (ne_request\ *\fIrequest\fR, const\ char\ *\fIname\fR);
.HP 34
void\ *\fBne_response_header_iterate\fR\ (ne_request\ *\fIrequest\fR, void\ *\fIcursor\fR, const\ char\ **\fIname\fR, const\ char\ **\fIvalue\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
To retrieve the value of a response header field, the \fBne_get_response_header\fR function can be used, and is given the name of the header to return\&.

.PP
To iterate over all the response headers returned, the \fBne_response_header_iterate\fR function can be used\&. This function takes a \fIcursor\fR parameter which should be NULL to retrieve the first header\&. The function stores the name and value of the next header header in the \fIname\fR and \fIvalue\fR parameters, and returns a new cursor pointer which can be passed to \fBne_response_header_iterate\fR to retrieve the next header\&.

.SH "RETURN VALUE"

.PP
\fBne_get_response_header\fR returns a string, or NULL if no header with that name was given\&. If used during request processing, the return value pointer is valid only until the next call to \fBne_begin_request\fR, or else, until the request object is destroyed\&.

.PP
Likewise, the cursor, names, and values returned by \fBne_response_header_iterate\fR are only valid until the next call to \fBne_begin_request\fR or until the request object is destroyed\&.

.SH "EXAMPLES"

.PP
The following code will output the value of the Last\-Modified header for a resource:

.nf
ne_request *req = ne_request_create(sess, "GET", "/foo\&.txt");
if (ne_request_dispatch(req) == NE_OK) {
    const char *mtime = ne_get_response_header(req, "Last\-Modified");
    if (mtime) {
        printf("/foo\&.txt has last\-modified value %s\\n", mtime);
    }
}
ne_request_destroy(req);
.fi

.SH "SEE ALSO"

.PP
\fBne_request_create\fR(3), \fBne_request_destroy\fR(3)\&.

.SH AUTHOR
Joe Orton <neon@webdav\&.org>.
