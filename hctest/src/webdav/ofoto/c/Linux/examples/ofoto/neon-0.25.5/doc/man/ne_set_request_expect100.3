.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NE_SET_REQUEST_E" 3 "20 January 2006" "neon 0.25.5" "neon API reference"
.SH NAME
ne_set_request_expect100 \- function to enable Expect: 100-continue support
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ne_request\&.h>
.sp
.HP 31
void\ \fBne_set_request_expect100\fR\ (ne_request\ *\fIrequest\fR, int\ \fIflag\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
An extension introduced in the HTTP/1\&.1 specification was the use of the Expect: 100\-continue header\&. This header allows an HTTP client to be informed of the expected response status before the request message body is sent: a useful optimisation for situations where a large message body is to be sent\&. The \fBne_set_request_expect100\fR function can be used to enable this feature by passing the \fIflag\fR parameter as any non\-zero integer\&.

.RS
.Sh "Warning"

.PP
Unfortunately, if this header is sent to a server which is not fully compliant with the HTTP/1\&.1 specification, a deadlock occurs resulting in a temporarily "hung" connection\&. neon will recover gracefully from this situation, but only after a 15 second timeout\&. It is highly recommended that this option is not enabled unless it is known that the server in use correctly implements Expect: 100\-continue support\&.

.RE

.SH "SEE ALSO"

.PP
\fBne_request_create\fR(3)\&.

.SH AUTHOR
Joe Orton <neon@webdav\&.org>.
