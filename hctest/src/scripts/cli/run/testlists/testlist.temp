#
# $Id: testlist.temp 10858 2007-05-19 03:03:41Z bberndt $
#
# Copyright © 2008, Sun Microsystems, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   # Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
#   # Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
#   # Neither the name of Sun Microsystems, Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



#

test.case.name=df-good-arg-test
TEST_ARGS='cmddef: df| \
           -re,\"Total: .*\" => sub { \&reportPass(); }| \
           -re, \"unknown option .*\" => sub { &reportFail(); }| \
           cmddef: df -p| \
           -re,\".* Total: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }
           cmddef: df --physical| \
           -re,\".* Total: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }
           cmddef: df -h -p| \
           -re,\".* Total: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }
           cmddef: df -p -h| \
           -re,\".* Total: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }
           cmddef: df -h| \
           -re,\"Total: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }
            cmddef: df --human-readable| \
           -re,\"Total: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }'
cli_tests/test		dtonga
test.case.name=df-bad-arg-test
TEST_ARGS='cmddef: df help| \
           -re,\"Usage: .*\" => sub { \&reportPass(); }| \
           -re, \"unknown option .*\" => sub { &reportPass(); }| \
           -re,\"Total: .*\" => sub { &reportFail(); } | \
           cmddef: df --physical 123| \
           -re,\".* Total: .*\" => sub { &reportFail(); } | \
           -re, \"Usage: .*\" => sub { &reportPass(); }
           cmddef: df .| \
           -re,\".* Total: .*\" => sub { &reportFail(); } | \
           -re, \"Usage: .*\" => sub { &reportPass(); }
           cmddef: df -P| \
           -re,\".* Total: .*\" => sub { &reportFail(); } | \
           -re, \"unknown option .*\" => sub { &reportPass(); }
           cmddef: df -1p -h| \
           -re,\".* Total: .*\" => sub { &reportFail(); } | \
           -re, \"unknown option .*\" => sub { &reportPass(); }
           cmddef: df --phys| \
           -re,\".* Total: .*\" => sub { &reportFail(); } | \
           -re, \"unknown option .*\" => sub { &reportPass(); }
           cmddef: df ?| \
           -re,\"Total: .*\" => sub { &reportFail(); } | \
           -re, \"Usage: .*\" => sub { &reportPass(); }'
cli_tests/test		dtonga
test.case.name=sysstat-good-arg-test
TEST_ARGS='cmddef: sysstat| \
           -re,\"Status: .*\" => sub { \&reportPass(); }| \
           -re, \"unknown option .*\" => sub { &reportFail(); }| \
           cmddef: sysstat -i 2343512| \
           -re, \"unknown .*\" => sub { &reportFail(); }| \
           -re,\"Status: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }
           cmddef: sysstat -i 4| \
           -re,\"Status: .*\" => sub { &reportPass(); } | \
           -re, \"unknown option .*\" => sub { &reportFail(); }'
cli_tests/test		dtonga
test.case.name=sysstat-bad-arg-test
TEST_ARGS='cmddef: sysstat 3456788887887778877999999| \
           -re,\"Status: .*\" => sub { &reportFail(); }| \
           -re,\"Uptime: .*\" => sub { &reportFail(); }| \
           -re, \"unknown option .*\" => sub { &reportPass(); }| \
           -re, \"illegal .*\" => sub { &reportPass(); }| \
           cmddef: sysstat -i| \
            -re,\"Status: .*\" => sub { &reportFail(); } | \
           -re, \"illegal .*\" => sub { &reportPass(); }
           cmddef: sysstat -i -3456677\&\{\#\@| \
            -re,\"Status: .*\" => sub { &reportFail(); } | \
           -re, \"illegal .*\" => sub { &reportPass(); }
           cmddef: sysstat \&\$\{| \
           -re,\"Uptime: .*\" => sub { &reportFail(); } | \
           -re,\"Status: .*\" => sub { \&reportFail(); }| \
           -re, \"unknown option .*\" => sub { &reportPass(); }
           cmddef: sysstat -i -3456777760| \
           -re,\"Uptime: .*\" => sub { &reportFail(); } | \
           -re,\"Status: .*\" => sub { \&reportFail(); }| \
           -re, \"unknown option .*\" => sub { &reportPass(); }|\
           -re, \"illegal .*\" => sub { &reportPass(); }| \
           cmddef: sysstat -i 77777777777774567777| \
           -re,\"Uptime: .*\" => sub { &reportFail(); } | \
           -re,\"Status: .*\" => sub { \&reportFail(); }| \
           -re, \"unknown option .*\" => sub { &reportPass(); }|\
           -re, \"illegal .*\" => sub { &reportPass(); }| \
           cmddef: sysstat POOOSP| \
           -re,\"Uptime: .*\" => sub { &reportFail(); } | \
           -re, \"unknown option .*\" => sub { &reportPass(); }'
cli_tests/test		dtonga


