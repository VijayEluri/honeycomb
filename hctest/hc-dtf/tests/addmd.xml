<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE script PUBLIC "-//DTF/DTF XML Script V1.0//EN" "dtf.dtd">

<script name="addmd">
    <info>
        <author>
            <name>Rodney Gomes</name>
            <email>rodney.gomes@sun.com</email>
        </author>
        <description>
            Honeycomb AddMetadata Performance test.
        </description>
    </info>

    <local>
        <createstorage id="INPUT" path="${dtf.xml.path}/input" />
        <createstorage id="OUTPUT" path="${dtf.xml.path}/output" />

        <loadproperties uri="storage://INPUT/hc.properties" />
        <import uri="storage://INPUT/${hc.metadata.filename}" />
        <!-- default values incase you want to run this test on its own
            instead of within the perf tessuite -->
        <property name="runid" value="${dtf.timestamp}" />
        <metadata id="MDEMPTY"/>
    </local>

    <!-- Lock as many components as necessary by the test. -->
    <for property="client" range="1..${hc.perf.clients}">
        <local>
            <lockcomponent id="CLIENT${client}">
                <attrib name="hc.client.type" value="${hc.client.type}"/>
            </lockcomponent>
        </local>
    </for>

    <!-- select oids from the auditdb of objects that have not been deleted
        and have a certain size and also meet the desired storewithmd setting 
    -->
    <query type="${hc.test.db.type}"
           event="hc.object"
           uri="storage://OUTPUT/${hc.test.db.file}"
           cursor="object">
        <where>
            <and>
                <neq op1="deleted"    op2="true" nullable="true"/>
                <eq op1="file.length" op2="${hc.filesize}" />
                <eq op1="storewithmd" op2="${hc.storewithmd}" />
            </and>
        </where>
    </query>

    <local>
        <echo>
        Adding MD to ${hc.filesize} byte objects 
        to ${hc.cluster.datavip}:${hc.cluster.dataport} 
        using ${hc.perf.clients} client(s) and ${hc.perf.threads} thread(s)
        for ${hc.perf.duration}
        </echo>
    </local>

    <record type="txt"
            event="hc.addmd"
            uri="storage://OUTPUT/addmd_perf_${hc.filesize}.txt">
        <record type="${hc.test.db.type}"
                event="hc.object"
                uri="storage://OUTPUT/${hc.test.db.file}">
            <attribute name="runid" value="${runid}" />
            <try>
                <parallelloop property="client" range="1..${hc.perf.clients}">
                    <component id="CLIENT${client}">
                        <attribute name="client" value="CLIENT${client}"/>
                        <loop range="1..${hc.perf.threads}"
                              property="thread"
                              type="parallel"> 
                    		<loop range="${hc.perf.duration}" 
                                  property="iteration"
                                  type="timer">
                                <fetchresult cursor="object" recycle="true"/>
                                <!--we need to record the old data values and this 
                                    is currently the only way to do so, I will work 
                                    on some ideas on how to do this in a cleaner way.  
                                -->
                                <attribute name="file.length" 
                                           value="${object.file.length}" />
                                <attribute name="file.type"
                                           value="${object.file.type}" />
                                <attribute name="file.offset"
                                           value="${object.file.offset}" />
    
                                <addmetadata datavip="${hc.cluster.datavip}"
                                             port="${hc.cluster.dataport}"
                                             oid="${object.oid}"
                                             node="${hc.loadgaming.node}"
                     					     continueOnFailure="${hc.continueonfailure}">
                                    <metadata refid="MDREF" />
                                </addmetadata>
                            </loop>
                        </loop>
                    </component>
                </parallelloop>
                <catch exception="${dtf.NoMoreResultsException}">
                    <sequence>
                        <local>
                            <echo>
                                All done addMD, no more md objects to
                                add to.
                            </echo>
                        </local>
                    </sequence>
                </catch>
            </try>
        </record>
    </record>
    <local>
         <echo>
         Runid: ${runid}</echo>
    </local>
</script>