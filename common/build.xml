<!--
 $Id: build.xml 3416 2005-01-31 21:59:58Z rw151951 $
 
 Copyright © 2008, Sun Microsystems, Inc.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are
 met:

    * Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.

    * Neither the name of Sun Microsystems, Inc. nor the names of its
 contributors may be used to endorse or promote products derived from
 this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


 
 ant buildfile for honeycomb common component.
--> 
<project name="common" default="common_jar">
  <description>
    Honeycomb common component. Building this project results in a 
    Solaris pkg file SUNWhccommon.pkg
  </description>

  <!-- first, local, user specified .ant.properties files take precedence -->
  <property file="${user.home}/.ant.properties"/>

  <!-- second, use the build.properties for this package -->
  <property file="build.properties"/>

  <!-- lastly, use the top-level builds properties file -->
  <property file="../build/build.properties"/>

  <!-- access ENV variables as ${env.XXX} -->
  <!-- ie.  ${env.USER} -->
  <property environment="env"/>

  <!-- INIT *************************************************************** -->
  <target name="common_init">
    <!-- turn on emma only if EMMA=1 -->
    <condition property="emma.enabled" value="true">
      <and>
        <isset property="env.EMMA"/>
        <equals arg1="${env.EMMA}" arg2="1"/>
      </and>
    </condition>
  </target>

  <!-- PREPARE ************************************************************ -->
  <target name="common_prepare" depends="common_init">
    <mkdir dir="${common.build.basedir}"/>
    <mkdir dir="${common.build.classdir}"/>
    <mkdir dir="${common.build.pkgdir}"/>
    <mkdir dir="${common.dist.basedir}"/>
    <mkdir dir="${common.dist.libdir}"/>
  </target>

  <!-- EXTERNAL *********************************************************** -->
  <target name="common_external" depends="common_prepare">
    <copy todir="${common.build.classdir}">
        <fileset dir="${basedir}/../build/external/dist/classes/commons-logging/classes/"
        includes="org/**"/>
    </copy>

    <copy todir="${common.build.classdir}">
        <fileset dir="${basedir}/../build/external/dist/classes/commons-httpclient/classes/"
        includes="org/**"/>
    </copy>

    <copy todir="${common.build.classdir}">
        <fileset dir="${basedir}/../build/external/dist/classes/commons-codec-1.3/classes/"
        includes="org/**"/>
    </copy>
  </target>

  <!-- COMPILE_JAVA ******************************************************* -->
  <target name="common_compile_java" depends="common_external">
    <javac srcdir="${common.java.srcdir}"
           destdir="${common.build.classdir}"
           debug="${javac.debug}"
           deprecation="${javac.deprecation}"
           source="${javac.source}"
           optimize="${javac.optimize}"/>

    <antcall target="emma_instrument">
      <param name="instrpath" value="${common.build.classdir}"/>
      <param name="metadatafile" value="${common.build.classdir}/common.em"/>
    </antcall>
  </target>

  <!-- EMMA *************************************************************** -->
  <target name="emma_instrument" if="emma.enabled">
    <path id="emma.ant.classpath">
      <pathelement location="${emma.antjar}"/>
      <pathelement location="${emma.jar}"/>
    </path>
    <taskdef resource="emma_ant.properties" classpathref="emma.ant.classpath"/>
    <emma enabled="${emma.enabled}">
        <instr mode="overwrite" 
               instrpath="${instrpath}"
               metadatafile="${metadatafile}"/>
    </emma>
  </target>

  <!-- JAR **************************************************************** -->
  <target name="common_jar" depends="common_compile_java">
    <jar jarfile="${common.dist.libdir}/${jarname.common}">
      <fileset dir="${common.build.classdir}"/>
    </jar>
  </target>

  <!-- PKG **************************************************************** -->
  <target name="pkg" depends="common_jar"
          description="build the solaris package">
      <exec executable="${pkgmk.bin}" failonerror="yes">
        <!-- arg value="" does not work here for some reason -->
        <arg line="-o -d ${common.build.pkgdir} -f ${common.pkgdefs}/prototype -r ${common.dist.basedir}"/>
      </exec>

      <exec executable="${pkgtrans.bin}" failonerror="yes">
        <arg line="-s ${common.build.pkgdir} ${sun.pkgname.common}.pkg ${sun.pkgname.common}"/>
      </exec>
  </target>

  <!-- ************************************************************** -->
  <target name="build_pkg" depends="pkg"
    description="compile sources and create the solaris package" />

  <!-- CLEAN ************************************************************** -->
  <target name="clean" description="cleans workspace of all generated files">
    <delete dir="${common.build.basedir}"/>
  </target>

</project>
